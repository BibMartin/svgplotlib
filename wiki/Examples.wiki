#summary Example of usage

= Introduction =

Due to SVG attributes use of dashes a mangling scheme is used
where an underscore is mangled to a dash. So `stroke_width`
becomes `stroke-width`.

SVG Attribute values will be converted to text upon writing, so
float and int values can be passed for coordinates etc.

= General SVG =

{{{
svg = SVG(width="150", height="150")
g = svg.Group(stroke = "black")
svg.Line(x1 = 0, y1 = 0., x2 = 150., y2 = 150., parent = g, stroke='red')
svg.TEX(r'$\sum_{i=0}^\infty x_i$', x = 1, y = 50)
}}}

= Bar =

{{{
graph = Bar(
    (10,50,100),
    width = 1000, height = 500,
    titleColor = 'blue',
    title = 'Simple bar plot',
    xlabel = 'X axis',
    ylabel = 'Y axis',
    grid = True,
)
}}}

= Gantt =

{{{
items = []
items.append(Duration('Item 1', date(2009, 1, 4), date(2009, 8, 10), '90%'))
items.append(Duration('Item 2', date(2009, 3, 11), date(2009, 8, 17), '50%'))
items.append(Duration('Item 3', date(2009, 4, 18), date(2009, 8, 24), '70%'))
items.append(Duration('Item 4', date(2009, 5, 25), date(2009, 8, 31), '10%'))
items.append(Duration('Item 4', date(2009, 5, 25), date(2009, 9, 27), '25%'))

graph = Gantt(items)
}}}

= Graph =

{{{
# graph with multiple lines
# first call only sets limits and scales
graph = Graph(
    (0,20),(0,50),
    width = 1000, height = 500,
    title = 'Simple plot',
    xlabel = 'X axis',
    ylabel = 'Y axis',
    grid = True,
)

# plot lines
graph.drawLines((0,10,20),(0,50,25), 'red')
graph.drawLines((0,10,20),(10,25,50), 'blue', stroke_dasharray="5 5", stroke_width=3)
}}}

= Pie =

{{{
graph =Pie(
    (10,50,100),
    title = 'Simple pie plot',
    labels = ('Cars', 'Boats', 'Planes'),
)
}}}